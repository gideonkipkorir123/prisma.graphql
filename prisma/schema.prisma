// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Todo {
  id          String   @id @default(uuid())
  title       String   @unique
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Products {
  id        String   @id @default(uuid())
  name      String   @unique
  price     Float
  image     String
  quantity  Int?
  brand     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// model User {
//   id                 String          @id @default(uuid())
//   username           String          @unique
//   email              String          @unique
//   hashedPassword     String
//   hashedRefreshToken String?
//   createdAt          DateTime        @default(now())
//   updatedAt          DateTime        @updatedAt
//   avatarUrl          String
//   chatrooms          Chatroom[]      @relation("ChatroomUsers")
//   messages           Message[]
//   ChatroomUsers      ChatroomUsers[]
// }

model User {
  id                 String          @id @default(uuid())
  username           String
  avatarUrl          String?
  email              String          @unique
  emailVerifiedAt    DateTime?
  hashedPassword     String
  hashedRefreshToken String?
  createdAt          DateTime        @default(now())
  updatedAt          DateTime        @updatedAt
  chatrooms          Chatroom[]      @relation("ChatroomUsers")
  messages           Message[]
  ChatroomUsers      ChatroomUsers[]
}

model Chatroom {
  id            String          @id @default(uuid())
  name          String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  users         User[]          @relation("ChatroomUsers")
  messages      Message[]
  ChatroomUsers ChatroomUsers[]
}

model Message {
  id         String   @id @default(uuid())
  content    String
  imageUrl   String?
  userId     String
  chatroomId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  chatroom   Chatroom @relation(fields: [chatroomId], references: [id], onDelete: Cascade)
}

model ChatroomUsers {
  chatroomId String
  userId     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  chatroom   Chatroom @relation(fields: [chatroomId], references: [id], onDelete: Cascade)

  @@id([chatroomId, userId])
}
